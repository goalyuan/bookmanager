"""
Django settings for bookmanager project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# __file__文件名
# os.path.abspath(__file__)表示当前文件的绝对路径
# os.path.dirname()文件目录

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v10(j5imm587ydcj9=w#$ft!d1g$&9x1da35=s)u+9yuizt#=3'

# SECURITY WARNING: don't run with debug turned on in production!
# 开发者使用,部署上线需要改为False
DEBUG = True

# 默认是127.0.0.1
# 如果你改变了允许方式，需要将运行的ip/域名 添加进去
# ALLOWED_HOSTS = ['10.93.70.2', '127.0.0.1']
ALLOWED_HOSTS = []

# Application definition
# 安装与注册子应用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'book',
    'book.apps.BookConfig',
    'login.apps.LoginConfig',  # login.apps.LoginConfig就是login
    # '子应用名（小写）'
    # '子应用名.apps.子应用名Config'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 是工程的url的配置入口
# 默认工程名.url
# 默认不修改
ROOT_URLCONF = 'bookmanager.urls'

# 和模板相关的配置信息
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 设置模板路径
        'DIRS': [os.path.join(BASE_DIR, 'template')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmanager.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    # sqlite是嵌入式关系型小型数据库，移动端使用
    'default': {
        # ENGINE引擎
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '39.97.210.119',
        'PORT': '3306',
        'USER': 'root',
        'PASSWORD': 'Test001.',
        'NAME': 'book',  # 指定数据库
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# 语言
LANGUAGE_CODE = 'zh-Hans'

# 时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# django区分静态和动态资源，通过STATIC_URL区分。访问静态资源http://ip:port+STATIC_URL+文件名,django就会认为我们访问静态资源
STATIC_URL = '/static/'
# 告知系统经静态文件
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
